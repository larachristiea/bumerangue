#!/usr/bin/env python3
"""
TESTE R√ÅPIDO DO EXTRATOR DE PGDAS
Verifica se o extrator est√° funcionando corretamente
"""

import os
import sys
import argparse
import importlib

def verificar_dependencias():
    """Verifica se todas as depend√™ncias est√£o instaladas"""
    print("üîç Verificando depend√™ncias...")
    
    try:
        import pdfplumber
        print("‚úÖ pdfplumber: OK")
    except ImportError:
        print("‚ùå pdfplumber: N√ÉO INSTALADO")
        print("   Execute: pip install pdfplumber")
        return False
    
    try:
        import json
        import re
        import logging
        from datetime import datetime
        print("‚úÖ Bibliotecas padr√£o: OK")
    except ImportError:
        print("‚ùå Bibliotecas padr√£o: ERRO")
        return False
    
    return True

def verificar_estrutura_diretorios(base_dir):
    """Verifica se a estrutura de diret√≥rios est√° correta"""
    print("\nüìÅ Verificando estrutura de diret√≥rios...")
    
    if not os.path.exists(base_dir):
        print(f"‚ùå Diret√≥rio base n√£o encontrado: {base_dir}")
        return False
    else:
        print(f"‚úÖ Diret√≥rio base: OK")
    
    pdfs_encontrados = 0
    
    for root, _, files in os.walk(base_dir):
        pdfs = [f for f in files if f.lower().endswith('.pdf')]
        if pdfs:
            print(f"‚úÖ {root}: {len(pdfs)} PDFs encontrados")
            pdfs_encontrados += len(pdfs)
    
    print(f"üìä Total de PDFs para processar: {pdfs_encontrados}")
    
    return pdfs_encontrados > 0

def testar_extrator_simples(module_name='extrator_pgdas_pdf', class_name='ExtratorPGDAS'):
    """Testa o extrator com um PDF de exemplo usando importa√ß√£o din√¢mica"""
    print("\nüß™ Testando extrator...")
    try:
        module = importlib.import_module(module_name)
        extrator_cls = getattr(module, class_name)
        extrator = extrator_cls()
        print("‚úÖ Extrator carregado com sucesso")
        
        # Verificar template
        template = extrator.template_json
        if template and "dados_estruturados" in template:
            print("‚úÖ Template JSON: OK")
        else:
            print("‚ùå Template JSON: ERRO")
            return False
        
        # Testar convers√£o de valores
        teste_valor = extrator.converter_valor_monetario("1.234,56")
        if teste_valor == 1234.56:
            print("‚úÖ Convers√£o monet√°ria: OK")
        else:
            print("‚ùå Convers√£o monet√°ria: ERRO")
            return False
        
        print("‚úÖ Todos os testes b√°sicos passaram!")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao testar extrator: {str(e)}")
        return False

def main():
    """Fun√ß√£o principal do teste"""
    print("üîß TESTE R√ÅPIDO - EXTRATOR DE PGDAS")
    print("=" * 50)
    
    parser = argparse.ArgumentParser(description="Teste r√°pido do extrator de PGDAS.")
    parser.add_argument('--input', required=True, help='Diret√≥rio base de entrada dos PDFs')
    parser.add_argument('--extrator-module', default='extrator_pgdas_pdf', help='M√≥dulo do extrator (padr√£o: extrator_pgdas_pdf)')
    parser.add_argument('--extrator-class', default='ExtratorPGDAS', help='Classe do extrator (padr√£o: ExtratorPGDAS)')
    args = parser.parse_args()
    
    # Passo 1: Verificar depend√™ncias
    if not verificar_dependencias():
        print("\n‚ùå FALHA: Depend√™ncias n√£o atendidas")
        print("Execute: pip install -r requirements_extrator.txt")
        return
    
    # Passo 2: Verificar estrutura
    if not verificar_estrutura_diretorios(args.input):
        print("\n‚ùå FALHA: Nenhum PDF encontrado para processar")
        print("Verifique se os PDFs est√£o nas pastas corretas")
        return
    
    # Passo 3: Testar extrator
    if not testar_extrator_simples(args.extrator_module, args.extrator_class):
        print("\n‚ùå FALHA: Erro no extrator")
        return
    
    print("\n" + "=" * 50)
    print("üéâ SUCESSO! O extrator est√° pronto para usar!")
    print("\nüìã PR√ìXIMOS PASSOS:")
    print("1. Execute: python3 extrator_pgdas_pdf.py --input <diretorio_de_entrada> --output <diretorio_de_saida>")
    print("2. Aguarde o processamento dos PDFs")
    print("3. Verifique os JSONs gerados na pasta de sa√≠da indicada")
    print("\n‚ú® Boa sorte com a extra√ß√£o autom√°tica!")

if __name__ == "__main__":
    main()
